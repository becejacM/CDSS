package drools.spring.rules

import sbnz.ftn.uns.ac.rs.cdss.model.Patient;
import sbnz.ftn.uns.ac.rs.cdss.model.Symptom;
import sbnz.ftn.uns.ac.rs.cdss.model.Disease;
import sbnz.ftn.uns.ac.rs.cdss.model.SymptomForDisease;
import sbnz.ftn.uns.ac.rs.cdss.model.DiagnosticTherapy;
import sbnz.ftn.uns.ac.rs.cdss.model.TypeOfMedicine;
import sbnz.ftn.uns.ac.rs.cdss.model.Medicine;
import sbnz.ftn.uns.ac.rs.cdss.model.dto.ReportDTO;
import sbnz.ftn.uns.ac.rs.cdss.model.dto.ResonerDTO;
import sbnz.ftn.uns.ac.rs.cdss.model.MedicineForTherapy;
import sbnz.ftn.uns.ac.rs.cdss.model.TypeOfSymptoms;
import sbnz.ftn.uns.ac.rs.cdss.services.DiagnosticProccesService;

import java.util.List;
import java.util.Set;
import java.util.HashSet;
import java.util.ArrayList;


query "report 1 : Pacinet sa mogucim hronicnim oboljenjima"
		p : Patient($mr : medicalRecord)
		d : Disease(name!="Prehlada", name!="Groznica", $n: name)
		teraphies : List(size>5) from accumulate (
				$dt : DiagnosticTherapy(disease.name==$n && checkDate(24, "month", "before")) from $mr.therapy,
				collectList($dt)
				)
end

query "report 2 : Zavisnici"
		p : Patient($mr : medicalRecord)
		medicines: List() 
    		from accumulate( $detail: DiagnosticTherapy(checkDate(6, "month", "before")) from $mr.therapy,
                     init( List list = new ArrayList(); )
                     action(list.addAll($detail.getMedicines()); )
                     result( list ) )
				
		
		numOfPainkiller : Integer(intValue>=5) from accumulate( 
          $m2: MedicineForTherapy(medicine.typeOfMedicine==TypeOfMedicine.PAINKILLER
          ) from medicines,
          init( int total = 0; ),
          action( total += 1; ),
          result((int)total)
        )
        
        setDoctors : Set(size>=3) from accumulate( 
          $m2: MedicineForTherapy(medicine.typeOfMedicine==TypeOfMedicine.PAINKILLER, $doc : doctor
          ) from medicines,
          collectSet($doc)
        )
end

query "report 3 : Oslabljen imunitet vise od 10 puta u poslednjih 12 meseci bolovao od bar 2 razlicite bolesti za koju su mu prepisani antibiotici"
		p : Patient($mr : medicalRecord)
		
		teraphies : List(size>=10) from accumulate (
				$dt : DiagnosticTherapy(checkDate(12, "month", "before")) from $mr.therapy,
				collectList($dt)
				)
        
		medicines: List() 
    		from accumulate( $detail: DiagnosticTherapy(checkDate(12, "month", "before")) from $mr.therapy,
                     init( List list = new ArrayList(); )
                     action(list.addAll($detail.getMedicines()); )
                     result( list ) )
        
        setDiseases : Set(size>=2) from accumulate( 
          $m2: MedicineForTherapy($d : diagnostictherapys.disease, medicine.typeOfMedicine==TypeOfMedicine.ANTIBIOTIC
          ) from medicines,
          collectSet($d)
        )
        //u 12 meseci sve bolesti sa antibioticima
        setDiseases2 : List(size==teraphies.size()) from accumulate( 
          $m2: MedicineForTherapy(medicine.typeOfMedicine==TypeOfMedicine.ANTIBIOTIC, $dis : diagnostictherapys.disease
          ) from medicines,
          collectList($dis)
        )
end

//query "report 3 : Oslabljen imunitet u 12 meseci sve bolesti sa antibioticima"
//		p : Patient($mr : medicalRecord)
//		
//		teraphies : List() from accumulate (
//				$dt : DiagnosticTherapy(checkDate(12, "month", "before")) from $mr.therapy,
//				collectList($dt)
//				)
//				
//		medicines: List() 
//   		from accumulate( $detail: DiagnosticTherapy() from teraphies,
//                     init( List list = new ArrayList(); )
//                     action(list.addAll($detail.getMedicines()); )
//                     result( list ) )
//				
//		
//        setDiseases : Set(size==teraphies.size()) from accumulate( 
//          $m2: MedicineForTherapy(medicine.typeOfMedicine==TypeOfMedicine.ANTIBIOTIC, $dis : disease
//          ) from medicines,
//          collectSet($dis)
//        )
//end

